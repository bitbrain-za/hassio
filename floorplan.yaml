name: Demo Floorplan
image: /local/custom_ui/floorplan/floorplan.svg
stylesheet: /local/custom_ui/floorplan/floorplan.css

hide_app_toolbar:

# These options are optional
# warnings:                  # enable warnings (to find out why things might ot be working correctly)
# pan_zoom:                  # enable experimental panning / zooming
# hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
# date_format: DD-MMM-YYYY   # Date format to use in hover-over text

last_motion_entity: sensor.template_last_motion
last_motion_class: last-motion



groups:
  - name: Lights
    entities:
       - light.mes
       - light.bedroom
       - light.spare_room
       - light.study
       - light.passage
       - light.bathroom
       - light.entrance
       - light.kitchen
       - light.lounge
       - light.lab
       - light.store
       - light.back
       - light.front
    states:
      - state: 'on'
        class: 'light-on'
      - state: 'off'
        class: 'light-off'
    action:
      domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
      service: toggle

  - name: Sensors
    entities:
      - sensor.floorplan_time
    text_template: '${entity.state ? entity.state : "unknown"}'


  # - name: Sensors
  #   entities:
  #      -  sensor.dark_sky_temperature
  #   #text_template: '${entity.state ? entity.state : "unknown"}'
  #   # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
  #   text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}'  
  #   class_template: '
  #     var temp = parseFloat(entity.state.replace("Â°", ""));
  #     if (temp < 10)
  #       return "temp-low";
  #     else if (temp < 30)
  #       return "temp-medium";
  #     else
  #       return "temp-high";
  #     '